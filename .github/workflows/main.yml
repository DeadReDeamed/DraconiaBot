name: dotnet package

on: 
  push:
    branches: 
    - main

jobs:
        
  docker:
    name: Publish - Docker Hub
    runs-on: windows-latest
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1

    - name: Restore Packages
      run: nuget restore "DiscordBot.sln"

    - name: Build Solution
      run: |
        msbuild.exe "DiscordBot.sln" /p:platform="Any CPU" /p:configuration="Release"
    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USER }} 
           -p ${{ secrets.DOCKER_PASS }}
    - name: Build Docker image
      run: docker build --tag DraconiaBot:latest --tag DraconiaBot:$(date +%s) .
    - name: add discordBot token
      run: | 
        echo {"token": ${{ secrets.DISCORDBOT_TOKEN }}, "prefix": "."} > Config.json
    - name: add config to image
      run: cp Config.json $REPO:/container
    - name: Publish Docker image
      run: docker push $REPO
  
  redeploy:
    name: Redeploy webhook call
    runs-on: ubuntu-18.04
    needs: [docker]
    steps:
      - name: Deploy docker container webhook
        uses: joelwmale/webhook-action@master
        env:
          WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL  }}
          data: "{ 'myField': 'myFieldValue'}"
